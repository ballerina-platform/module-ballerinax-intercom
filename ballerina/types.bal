// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/http;

public type ContactArchived record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type PhoneSwitchOk record {|
    *http:Ok;
    PhoneSwitch body;
|};

public type UpdateTicketRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: MergeContact
public type MergeContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: convertConversationToTicket
public type ConvertConversationToTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listCompaniesForAContact
public type ListCompaniesForAContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: updateTicketType
public type UpdateTicketTypeHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type PaginatedResponse record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: lisDataEvents
public type LisDataEventsQueries record {
    Filter filter;
    # summary flag
    boolean summary?;
    # The value must be user
    string 'type;
};

# Represents the Headers record for the operation: retrieveTeam
public type RetrieveTeamHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: CreateContact
public type CreateContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Newsfeed record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketTypeAttribute record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: cancelDataExport
public type CancelDataExportHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DeletedObject record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: ListAttachedContacts
public type ListAttachedContactsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};

# Represents the Queries record for the operation: lisDataAttributes
public type LisDataAttributesQueries record {
    # Include archived attributes in the list. By default we return only non archived data attributes.
    boolean include_archived?;
    # Specify the data attribute model to return.
    "contact"|"company"|"conversation" model?;
};

# Represents the Queries record for the operation: retrieveCompany
public type RetrieveCompanyQueries record {
    # How many results to display per page. Defaults to 15
    int per_page?;
    # The `company_id` of the company to filter by.
    string company_id?;
    # The `name` of the company to filter by.
    string name?;
    # The `tag_id` of the company to filter by.
    string tag_id?;
    # The page of results to fetch. Defaults to first page
    int page?;
    # The `segment_id` of the company to filter by.
    string segment_id?;
};

# Represents the Headers record for the operation: retrieveCompany
public type RetrieveCompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CompanyOk record {|
    *http:Ok;
    Company body;
|};

public type JsonUnprocessableEntity record {|
    *http:UnprocessableEntity;
    json body;
|};

# Represents the Headers record for the operation: createMessage
public type CreateMessageHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CreatePhoneSwitchRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listTags
public type ListTagsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TagsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: createTicketTypeAttribute
public type CreateTicketTypeAttributeHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: dataEventSummaries
public type DataEventSummariesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type SubscriptionTypeOk record {|
    *http:Ok;
    SubscriptionType body;
|};

# Represents the Queries record for the operation: retrieveVisitorWithUserId
public type RetrieveVisitorWithUserIdQueries record {
    # The user_id of the Visitor you want to retrieve.
    string user_id;
};

public type CreateDataAttributeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Note record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: detachContactFromACompany
public type DetachContactFromACompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: deleteTag
public type DeleteTagHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TagOk record {|
    *http:Ok;
    Tag body;
|};

# Represents the Headers record for the operation: retrieveHelpCenter
public type RetrieveHelpCenterHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listHelpCenters
public type ListHelpCentersHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ContactDeleted record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ErrorUnauthorized record {|
    *http:Unauthorized;
    Error body;
|};

# Represents the Headers record for the operation: ListAttachedSegmentsForCompanies
public type ListAttachedSegmentsForCompaniesHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: createNewsItem
public type CreateNewsItemHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Queries record for the operation: updateConversation
public type UpdateConversationQueries record {
    # Set to plaintext to retrieve conversation messages in plain text.
    string display_as?;
};

# Represents the Headers record for the operation: detachContactFromConversation
public type DetachContactFromConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ContactsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: autoAssignConversation
public type AutoAssignConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type JsonNotFound record {|
    *http:NotFound;
    json body;
|};

public type UpdateTicketTypeAttributeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ConversationIdTagsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Team record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: downloadDataExport
public type DownloadDataExportHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listTeams
public type ListTeamsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listSegmentsForAContact
public type ListSegmentsForAContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type NewsItem record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Ticket record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listNewsItems
public type ListNewsItemsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ContactUnarchived record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: listAllCompanies
public type ListAllCompaniesQueries record {
    # How many results to return per page. Defaults to 15
    int per_page?;
    # The page of results to fetch. Defaults to first page
    int page?;
    # `asc` or `desc`. Return the companies in ascending or descending order. Defaults to desc
    string 'order?;
};

# Represents the Headers record for the operation: convertVisitor
public type ConvertVisitorHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listAdmins
public type ListAdminsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type HelpCenter record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: getTicket
public type GetTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: searchArticles
public type SearchArticlesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CreateDataEventRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactsIdBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketTypeOk record {|
    *http:Ok;
    TicketType body;
|};

# Represents the Headers record for the operation: createTicket
public type CreateTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

public type CollectionOk record {|
    *http:Ok;
    Collection body;
|};

public type ContactArchivedOk record {|
    *http:Ok;
    ContactArchived body;
|};

# Represents the Headers record for the operation: detachTagFromConversation
public type DetachTagFromConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: updateVisitor
public type UpdateVisitorHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listTicketTypes
public type ListTicketTypesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DataExportOk record {|
    *http:Ok;
    DataExport body;
|};

# Represents the Headers record for the operation: createDataExport
public type CreateDataExportHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ReplyConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketTypeAttributeOk record {|
    *http:Ok;
    TicketTypeAttribute body;
|};

# Represents the Headers record for the operation: updateTicketTypeAttribute
public type UpdateTicketTypeAttributeHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: retrieveArticle
public type RetrieveArticleHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: createDataEvent
public type CreateDataEventHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: attachContactToConversation
public type AttachContactToConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type UpdateCollectionRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveConversation
public type RetrieveConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CreateDataEventSummariesRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateArticleRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: attachTagToTicket
public type AttachTagToTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DataAttributeOk record {|
    *http:Ok;
    DataAttribute body;
|};

public type ContactIdSubscriptionsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type DataAttributeList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: deleteNewsItem
public type DeleteNewsItemHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ErrorBadRequest record {|
    *http:BadRequest;
    Error body;
|};

public type DataEventSummary record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listTagsForAContact
public type ListTagsForAContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type SubscriptionTypeList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: scrollOverAllCompanies
public type ScrollOverAllCompaniesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CollectionList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateCollectionRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateOrUpdateCompanyRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: scrollOverAllCompanies
public type ScrollOverAllCompaniesQueries record {
    # 
    string scroll_param?;
};

# Represents the Headers record for the operation: listConversations
public type ListConversationsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: redactConversation
public type RedactConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type NewsItemOk record {|
    *http:Ok;
    NewsItem body;
|};

public type DeletedArticleObject record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ArticleList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: getDataExport
public type GetDataExportHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type SearchRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactIdTagsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: ArchiveContact
public type ArchiveContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type SegmentList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: createTag
public type CreateTagHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type AdminWithApp record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: attachSubscriptionTypeToContact
public type AttachSubscriptionTypeToContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type AdminList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type PhoneSwitch record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: UnarchiveContact
public type UnarchiveContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CompanyListOk record {|
    *http:Ok;
    CompanyList body;
|};

public type UpdateConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TeamList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactListOk record {|
    *http:Ok;
    ContactList body;
|};

public type ContactAttachedCompanies record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveCollection
public type RetrieveCollectionHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type NoteOk record {|
    *http:Ok;
    Note body;
|};

public type TicketReplyOk record {|
    *http:Ok;
    TicketReply body;
|};

# Represents the Headers record for the operation: createTicketType
public type CreateTicketTypeHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type UpdateDataAttributeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Admin record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactUnarchivedOk record {|
    *http:Ok;
    ContactUnarchived body;
|};

# Represents the Headers record for the operation: listAllCompanies
public type ListAllCompaniesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ErrorUnprocessableEntity record {|
    *http:UnprocessableEntity;
    Error body;
|};

public type Filter record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: searchArticles
public type SearchArticlesQueries record {
    # Return a highlighted version of the matching content within your articles. Refer to the response schema for more details.
    boolean highlight?;
    # The phrase within your articles to search for.
    string phrase?;
    # The ID of the Help Center to search in.
    int help_center_id?;
    # The state of the Articles returned. One of `published`, `draft` or `all`.
    string state?;
};

# Represents the Headers record for the operation: attachTagToContact
public type AttachTagToContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type NewsItemRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactSegments record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type DeletedCollectionObject record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: listSegments
public type ListSegmentsQueries record {
    # It includes the count of contacts that belong to each segment.
    boolean include_count?;
};

# Represents the Headers record for the operation: createNote
public type CreateNoteHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: updateArticle
public type UpdateArticleHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: getTicketType
public type GetTicketTypeHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: updateNewsItem
public type UpdateNewsItemHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: findTag
public type FindTagHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ContactOk record {|
    *http:Ok;
    Contact body;
|};

public type ConversationList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type SubscriptionType record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketTypeList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CompanyScroll record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ConversationListOk record {|
    *http:Ok;
    ConversationList body;
|};

# Represents the Headers record for the operation: ListContacts
public type ListContactsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ConvertVisitorRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateTicketTypeAttributeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type IdAwayBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketReply record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type IdPartsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveNote
public type RetrieveNoteHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listSubscriptionTypes
public type ListSubscriptionTypesHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Queries record for the operation: listConversations
public type ListConversationsQueries record {
    # How many results per page
    @constraint:Int {maxValue: 150}
    int per_page = 20;
    # String used to get the next page of conversations.
    string starting_after?;
};

# Represents the Headers record for the operation: detachTagFromTicket
public type DetachTagFromTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: createPhoneSwitch
public type CreatePhoneSwitchHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ArticleSearchResponse record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listActivityLogs
public type ListActivityLogsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: searchTickets
public type SearchTicketsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DataAttribute record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateDataExportsRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Visitor record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Article record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type Conversation record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listSegments
public type ListSegmentsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: setAwayAdmin
public type SetAwayAdminHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type UpdateTicketTypeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: identifyAdmin
public type IdentifyAdminHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type IdCompaniesBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listArticles
public type ListArticlesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TagsIdBody1 record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveNewsfeed
public type RetrieveNewsfeedHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DataExport record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type MergeContactsRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: manageConversation
public type ManageConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: deleteCollection
public type DeleteCollectionHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DeletedCompanyObject record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ContactList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type JsonBadRequest record {|
    *http:BadRequest;
    json body;
|};

# Represents the Headers record for the operation: createArticle
public type CreateArticleHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type UpdateVisitorRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ErrorNotFound record {|
    *http:NotFound;
    Error body;
|};

public type CreateTicketRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveNewsItem
public type RetrieveNewsItemHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Tag record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: deleteArticle
public type DeleteArticleHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TicketOk record {|
    *http:Ok;
    Ticket body;
|};

public type ConversationOk record {|
    *http:Ok;
    Conversation body;
|};

# Represents the Headers record for the operation: UpdateContact
public type UpdateContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Company record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CompanyList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listNewsfeeds
public type ListNewsfeedsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type IdNotesBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: ShowContact
public type ShowContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: createOrUpdateCompany
public type CreateOrUpdateCompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type AttachContactToConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: updateConversation
public type UpdateConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TicketListOk record {|
    *http:Ok;
    TicketList body;
|};

public type ActivityLogList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type IntercomVersion record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type ArticleOk record {|
    *http:Ok;
    Article body;
|};

# Represents the Headers record for the operation: detachTagFromContact
public type DetachTagFromContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: detachSubscriptionTypeToContact
public type DetachSubscriptionTypeToContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: replyConversation
public type ReplyConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Queries record for the operation: retrieveConversation
public type RetrieveConversationQueries record {
    # Set to plaintext to retrieve conversation messages in plain text.
    string display_as?;
};

# Represents the Headers record for the operation: replyTicket
public type ReplyTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listSubscriptionsForAContact
public type ListSubscriptionsForAContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type RedactConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Queries record for the operation: listActivityLogs
public type ListActivityLogsQueries record {
    # The end date that you request data for. It must be formatted as a UNIX timestamp.
    string created_at_before?;
    # The start date that you request data for. It must be formatted as a UNIX timestamp.
    string created_at_after;
};

# Represents the Headers record for the operation: deleteCompany
public type DeleteCompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: UpdateCompany
public type UpdateCompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: createCollection
public type CreateCollectionHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Collection record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: retrieveVisitorWithUserId
public type RetrieveVisitorWithUserIdHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type DetachContactFromConversationRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateMessageRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type MessageOk record {|
    *http:Ok;
    Message body;
|};

# Represents the Headers record for the operation: DeleteContact
public type DeleteContactHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CompanyAttachedSegments record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: lisDataAttributes
public type LisDataAttributesHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Message record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type NoteList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type IdReplyBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: listNotes
public type ListNotesHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: retrieveSegment
public type RetrieveSegmentHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TagsIdBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: updateCollection
public type UpdateCollectionHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Segment record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: createDataAttribute
public type CreateDataAttributeHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listAllCollections
public type ListAllCollectionsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: RetrieveACompanyById
public type RetrieveACompanyByIdHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: lisDataEvents
public type LisDataEventsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TagList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type CreateTicketTypeRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type TicketType record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: createConversation
public type CreateConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ErrorForbidden record {|
    *http:Forbidden;
    Error body;
|};

public type UpdateArticleRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: searchConversations
public type SearchConversationsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type ConvertConversationToTicketRequest record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: updateTicket
public type UpdateTicketHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Error record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

# Represents the Headers record for the operation: attachTagToConversation
public type AttachTagToConversationHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type Contact record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: SearchContacts
public type SearchContactsHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: listLiveNewsfeedItems
public type ListLiveNewsfeedItemsHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type CompanyAttachedContacts record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

public type HelpCenterList record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};

# Represents the Headers record for the operation: attachContactToACompany
public type AttachContactToACompanyHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: updateDataAttribute
public type UpdateDataAttributeHeaders record {
    IntercomVersion Intercom\-Version?;
};

# Represents the Headers record for the operation: retrieveAdmin
public type RetrieveAdminHeaders record {
    IntercomVersion Intercom\-Version?;
};

public type TicketIdTagsBody record {
    # The type of the object
    "segment.list" 'type?;
    string[] segments?;
};
